{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Random Blog","text":"<p>This is a random blog. More content to be added.</p>"},{"location":"todo/","title":"Todo","text":"<p>fzf ripgrep</p> <p>Akra\u2013Bazzi method</p>"},{"location":"blog/blog/","title":"Blog","text":""},{"location":"blog/glossary/","title":"Glossary","text":"<p>LLM</p> <p>corpus</p> <p>hallucinating</p> <p>skip gram</p> <p>LSTM</p> <p>ERM: Empirical risk minimization</p> <p>MLE: maximum likelihood estimation</p> <p>NER: Named Entity Recognition</p> <p>POS: Parts-of-speech (tagging)</p> <p>MLM: Masked Language Modeling</p> <p>greedy decoding</p> <p>beam search</p> <p>viterbi</p> <p>CBOW: Predict word from context</p> <p>GloVe</p>"},{"location":"blog/glossary/#alg","title":"Alg","text":"<p>\\(N\\) used to denote the size of input</p> <p>Insertion sort: </p> <p>Merge sort:</p> <p>Quick sort:</p> <p>Heap sort:</p> <p>Counting sort:</p> <p>Radix sort:</p> <p>Medians and Order Statistics: Median of medians</p> <p>BST/binary search tree:</p> <p>balanced search tree</p> <p>2-3 tree:</p> <p>In/Pre/Post order tree walk (ITW PreTW PostTW)</p> <p>\u6e10\u8fdb\uff1aasymptotic notation          Asymptotically \u5747\u644a\uff1aamortized time \u5e76\u884c\uff1aParallel Parallelize Parallelization \u8fde\u7eed\u7684\uff08\u5b50\u5e8f\u5217\uff09 consecutive recurrence formulas/equation</p>"},{"location":"blog/lang/lang/","title":"Lang","text":"<p>\u5b66\u4e60\u4e00\u95e8\u5f62\u5f0f\u8bed\u8a00</p>"},{"location":"blog/lang/yaml/","title":"Yaml","text":"<p>YAML: YAML Ain't Markup Language\u2122 \u662f\u4e00\u4e2a\u6570\u636e\u5e8f\u5217\u5316\u8bed\u8a00\uff08data serialization language\uff09\uff0c\u9002\u5408\u4eba\u7c7b\u8bfb\u5199\uff0c\u4ee5\u53ca\u8de8\u7f16\u7a0b\u8bed\u8a00\u3002</p> <p>\u662f json \u7684\u4e25\u683c\u8d85\u96c6\uff08strict superset\uff09\uff0c\u610f\u5473\u7740\u4e00\u4e2a json \u6587\u4ef6\u53ef\u4ee5\u88ab\u89e3\u8bfb\u4e3a yaml \u6587\u4ef6\uff08\u5b58\u7591\uff1f\uff09</p> recursive acronym <p>?</p>"},{"location":"blog/lang/yaml/#_1","title":"\u53c2\u8003","text":"<p>yaml\u5b98\u65b9</p> <p>Learn X in Y minutes</p> <p>Learn X in Y minutes \u4e2d\u6587</p>"},{"location":"blog/theory/abstract_algebra/","title":"\u62bd\u8c61\u4ee3\u6570","text":"<p>\u7531\u4e8e\u6559\u6750 AbstractAlgebra \u5df2\u7ecf\u975e\u5e38\u7b80\u6d01\u660e\u4e86\uff0c\u8fd9\u91cc\u53ea\u505a\u8865\u5145</p>"},{"location":"blog/theory/abstract_algebra/#_2","title":"\u5f15\u5165","text":"<p>\u5927\u90e8\u5206\u90fd\u5341\u5206\u57fa\u7840\uff0c\u626b\u4e00\u773c\u5c31\u53ef\u4ee5\u4e86</p>"},{"location":"blog/theory/abstract_algebra/#p8","title":"P8","text":"<p>The significance of the Associativity laws is that summing and multiplying a finite collection of integers makes sense, i.e. is independent of how we do it</p> <p>Cancellation Law: For a, b, c \u2208 Z, ca = cb and c \u2215= 0 \u21d2 a = b</p>"},{"location":"blog/theory/abstract_algebra/#p11","title":"P11","text":"<p>Our construction of + and \u00d7 on Z/mZ is lifted from Z, hence they satisfy the eight elementary properites that + and \u00d7 satisfied on Z</p>"},{"location":"blog/theory/abstract_algebra/#_3","title":"\u7fa4","text":"<p>\u5e7a\u534a\u7fa4</p> <p>\u540c\u6001 \u540c\u6784 \u81ea\u540c\u6001 \u81ea\u540c\u6784</p>"},{"location":"blog/theory/abstract_algebra/#glossary","title":"Glossary","text":"<p>residue classes\uff1a\uff08\u6a21m\u7684\uff09\u540c\u4f59\u7c7b\uff0c\u4f8b\u5982\uff1a[0] ... [m-1]</p>"},{"location":"blog/theory/abstract_interpretation/","title":"Abstract Interpretation @ NYU CSCI-GA.3140-001 Spring 2023","text":"<ul> <li>\u6559\u6388\uff1aPatrick Cousot</li> <li>\u6559\u6750\uff1aCousot, Patrick.\u00a0Principles of Abstract Interpretation, MIT Press, 2021.\u00a0ProQuest Ebook Central, http://ebookcentral.proquest.com/lib/nyulibrary-ebooks/detail.action?docID=6715808.  </li> <li>\u7f51\u9875\uff1ahttps://cs.nyu.edu/~pcousot/courses/spring23/CSCI-GA.3140-001/slides/index.shtml</li> <li>https://github.com/PrAbsInt</li> </ul>"},{"location":"blog/theory/abstract_interpretation/#_1","title":"\u8bfb\u6559\u6750\u7b14\u8bb0","text":""},{"location":"blog/theory/abstract_interpretation/#chap2","title":"Chap2","text":"<p>For those interested only in the use of such static analyzers, Introduction to Static Analysis by Xavier Rival and Kwangkeun Yi [837] is a good reference.  </p> <p>Over time, the fundamental ideas of abstract interpretation have found a wide range of applications, often unexpected, such as, the formalization of Boolean satisfiability (SAT) and satisfiability modulo theories (SMT) solvers [274, 284]; fuzz testing [851]; robustness and fairness of neural networks [893, 941]; biological networks [140]; and so on. This book provides all the foundations to understand these applications in depth.  </p> <p>duality of logic : Exercise 2.5</p> <p>Remark 2.7</p> <p>A set S equipped with a partial order &lt;= is called a poset \\&lt;S, &lt;=&gt;</p> <p>It may be that the returned value of a function always belong to a set that depends upon one of its parameters (this is called a dependent type in computer science [166]).</p> <p>before 2.2.5: A pointwise definition of a function?</p> <p>Readers may enjoy studying more advanced introduction to abstract set theory, such as [706]</p>"},{"location":"blog/theory/abstract_interpretation/#chap3","title":"Chap3","text":"<p>Structural definitions are the basis of denotational semantics, introduced by Dana Scott and Christopher Strachey [872] (and called compositional in this context).  </p> <p>The idea of collecting semantics was introduced in [235] (under the qualifier static semantics ) as a basis for proving the soundness of static analyses. The concept of collecting semantics is further developed in chapter 8.  </p>"},{"location":"blog/theory/abstract_interpretation/#chap15","title":"Chap15","text":"<p>Slides-10--15--fixpoints-AI.pdf p17 property</p> <p>Slide 11 p27 Slide 12 10-19 Slide 16 An overview of set-theoretic formal definitions is given in [Aczel, 1977].</p> <p>Theorem (18.10,</p> <p>Slide 18 p28-32</p> <p>Slide 19 p28 Slide 19 p29 Not mechanizable, even if the loop invariant is given (Rice theorem) Slide 20 Proof Slide 21 P24</p>"},{"location":"blog/theory/abstract_interpretation/#_2","title":"\u52d8\u8bef","text":"<p>?book pointwise function slide04-p11 exists -&gt; exit</p>"},{"location":"blog/theory/abstract_interpretation/#_3","title":"\u5927\u7eb2","text":"<p>\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u6781\u7b80\u7684\u6307\u4ee4\u5f0f\u8bed\u8a00\uff08imperative programming language\uff09 <pre><code>A ::= 1 | x | y | ... | z | A1 - A2\nB ::= A1 &lt; A2 | B1 nand B2\nE ::= A | B\n\nS ::= x = E\n    | ;\n    | if (B) S\n    | if (B) S else S\n    | while (B) S\n    | break ;\n    | { Sl }\nSl ::= Sl S | \u025b\n</code></pre> \u975e\u4e25\u683c\u5730\uff0c\u8fd9\u662f C \u8bed\u8a00\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u5373\u8bed\u53e5\u53ef\u4ee5\u6309\u7167 C \u6765\u7406\u89e3\u3002</p> <p>\u7701\u7565\u4e86\u62ec\u53f7\uff1ftodo \u4ee3\u7801\u8fd0\u884c\u7684\u5c40\u90e8\u6027</p> <p>The description of syntax by grammar dates back to Noam Chomsky [180]. P28</p> <p>\u4e00\u4e2a\u6027\u8d28\uff08Property\uff09\u7528\u4e00\u4e2a\u96c6\u5408 \\(P\\) \u8868\u793a\uff0c\u5728\u96c6\u5408\u91cc\u7684\u6ee1\u8db3\u6027\u8d28\uff0c\u8574\u542b\uff08imply\uff09\u5173\u7cfb\u5373\u96c6\u5408\u7684\u5305\u542b\u5173\u7cfb \\(P \\subseteq Q\\)</p>"},{"location":"blog/theory/abstract_interpretation/#notion","title":"\u7b26\u53f7 Notion","text":""},{"location":"blog/theory/abstract_interpretation/#basic","title":"\u57fa\u7840 Basic","text":"<p>\\(\\mathbb{N, N^+, Z, R}\\)</p> <p>\\(\\mathbb{B}\\) = Bool : tt, ff</p> <p>\u201c\u5b9a\u4e49\u4e3a\u201d = \"\\(\\triangleq\\)\"</p>"},{"location":"blog/theory/abstract_interpretation/#set","title":"\u96c6\u5408 Set","text":"Symbol Type Description Example tex \\(\\varnothing\\) \u2118, \\(\\wp(S)\\) Set-&gt;Set(Set) [Weierstrass] powerset, \\(\\wp(S)=\\{S'\\mid S'\\subseteq S\\}\\) \\wp \\(\\wp_f(S)\\) finite powerset (all finite subsets) \\(\\neg\\) \\neg"},{"location":"blog/theory/abstract_interpretation/#structures-and-maps","title":"\u7ed3\u6784\u4e0e\u6620\u5c04 Structures and maps","text":"Symbol Type Description Example tex \\(\\alpha\\) Any-&gt;Any \u62bd\u8c61\u5316\uff0cabstraction \\(\\gamma\\) Any-&gt;Any \u5177\u8c61\u5316\uff0cconcretization \\(\\mathcal{S}\\) Any-&gt;Label-&gt;Any \u8bed\u4e49\uff0csemantic \\(\\mathbb{R}\\) poset =\\&lt;Set, PartialOrder&gt; A set \\(S\\) equipped with a partial order \\(\\leq\\) is called a poset \\(\\left&lt;S, \\leq\\right&gt;\\) \\(\\nrightarrow\\) partial function \\(\\twoheadrightarrow\\) \u6ee1\u5c04\uff0csurjective \\(\\rightarrowtail\\) \u5355\u5c04\uff0cinjective \u2916 \u53cc\u5c04\uff0cbijective"},{"location":"blog/theory/abstract_interpretation/#program","title":"\u7a0b\u5e8f Program","text":"Symbol Type Description Example tex italic \\(\\mathbb{V}\\) \u53d8\u91cf\uff0cvariable italic \\(\\mathbb{A}\\) \u7b97\u672f\u8868\u8fbe\u5f0f\uff0carithmetic exp italic \\(\\mathbb{B}\\) \u5e03\u5c14\u8868\u8fbe\u5f0f\uff0cboolean exp italic \\(\\mathbb{E}\\) \u8868\u8fbe\u5f0f\uff0cexpression Symbol Type Description Example tex \\(\\rho\\) Var-&gt;Int \u4e00\u4e2a\u73af\u5883 \\(\\mathbb{Ev}\\) Type1 =Var-&gt;Int \\(\\mathscr{A}\\) ArithExp-&gt;Ev-&gt;Int \\(\\mathscr{B}\\) BoolExp-&gt;Ev-&gt;Bool \\(\\mathcal{S}\\) Exp-&gt;Ev-&gt;(Int|Bool) semantic property \\(P\\) Set(Ev-&gt;(Int|Bool)) \\(\\mathcal{S}\\) Exp-&gt;Ev-&gt;(Int|Bool)"},{"location":"blog/theory/abstract_interpretation/#abstraction","title":"Abstraction","text":"Symbol Type Description Example tex the hat of \\(\\widehat{S}\\) Structural"},{"location":"blog/theory/lisp/","title":"Lisp","text":"<p>\u8bd5\u56fe\u5f62\u5f0f\u5316\u5efa\u7acb\u4e00\u4e2alisp\u8bed\u4e49\uff0c\u5e76\u8bc1\u660e\u76f8\u5173\u6027\u8d28</p>"},{"location":"blog/theory/math_basics/","title":"\u57fa\u7840\u6570\u5b66\u6982\u5ff5","text":""},{"location":"blog/theory/math_basics/#_2","title":"\u524d\u8a00","text":"<p>\u540c\u6837\u7684\u6982\u5ff5\u5728\u4e0d\u540c\u7684\u8bed\u5883\u4e0b\uff08\u4f8b\u5982\u4e0d\u540c\u7684\u6559\u6750\uff0c\u89c6\u9891\uff09\u8868\u8fbe\u65b9\u5f0f\u4e0d\u540c\u3002</p> <p>\u7edf\u4e00\u7684\u8868\u8fbe\u6709\u5229\u4e8e\u601d\u8003\u548c\u9605\u8bfb\u3002\u8fd9\u91cc\u5b9a\u4e49\u4e00\u4e9b\u57fa\u672c\u7684\u6570\u5b66\u6982\u5ff5\u3002</p> <p>\u6ce8\uff1a\u672c\u4eba\u53d7\u5230\u6784\u9020\u4e3b\u4e49\u5f71\u54cd\uff0c\u4e14\u8ba8\u538c\u5b9e\u65e0\u7a77\uff0c\u4f7f\u7528\u7c7b\u578b\u8bba</p>"},{"location":"blog/theory/math_basics/#meta","title":"Meta","text":"<p>\u7c7b\u578b\u5168\u5927\u5199\uff0c\u5e38\u91cf\u9996\u5b57\u6bcd\u5927\u5199</p> <p>\u5bf9\u8c61\uff1a</p> <p>\u7b49\u4e8e\uff1a</p> <p>\u81ea\u7136\u6570\u88ab\u8ba4\u4e3a\u662f\u57fa\u672c\u7684</p>"},{"location":"blog/theory/math_basics/#_3","title":"\u96c6\u5408\u8bba","text":"<p>def \u2205 = empty type</p> <p>def /A -&gt; B/ = function type of A to B</p> <p>def (range i j) = type of {i, i+1, ... ,j}</p> <p>def [i] = (range 0 /i-1/)</p> <p>\u5bf9\uff1aA-&gt;</p> <p>\u5217\u8868</p>"},{"location":"blog/theory/math_basics/#tensor","title":"\u5f20\u91cf Tensor","text":"<p>see:[Ricci calculus] [Einstein notation]</p> <p>def (tensor n1 ...) = \u4e00\u4e2a\u591a\u7ef4\u6570\u7ec4\uff0c\u5176\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u5927\u5c0f\u4e3a n1 ...</p> <p>def (X (i ...) (j ...) (k ...) f g) = \u7231\u56e0\u65af\u5766\u6c42\u548c\u7b26\u53f7\uff0c\u9ed8\u8ba4 f \u4e3a\u4e58\u6cd5\uff0cg\u4e3a\u52a0\u6cd5</p> <p>def \u77e9\u9635\u4e58\u6cd5 = (X (i j) (j k) (i k))</p> <p>def \u77e9\u9635\u4e58\u5411\u91cf = (X (i j) (j) (i)) </p> <p>(X ... L ...) ... (f . (pp pi)) ...=(X ... ((pp pi) L) ...) ... f ...</p>"},{"location":"blog/tool/app/vulkan/","title":"vulkan","text":"<p>Vulkan is designed as a cross-platform abstraction over\u00a0GPUs</p>"},{"location":"fragment/fragment/","title":"Fragment","text":"<p>\u77e5\u8bc6\u788e\u7247~</p>"},{"location":"fragment/math_problems/","title":"\u6570\u5b66\u95ee\u9898","text":"<p>\u5047\u8bbe \\(a_1,a_2,\\dots,a_n \\in (-1,1)\\)\uff0c\u8bc1\u660e \\(\\(\\prod_{1\\leq i, j \\leq n}\\frac{1+a_ia_j}{1-a_ia_j}\\geq1\\)\\) \u5e76\u6c42\u53d6\u7b49\u6761\u4ef6\u3002</p> <p>\u7b54\uff1a\u53d6 \\(\\log\\) \u7136\u540e\u6cf0\u52d2\u5c55\u5f00\uff0c\u4ea4\u6362\u6c42\u548c\u7b26\u53f7\uff08\u4ec0\u4e48\u65f6\u5019\u80fd\uff1f\uff09</p> <p>\u662f\u5426\u5b58\u5728\u5b8c\u5168\u5e73\u65b9\u6570 \\(a^2, b^2\\) \uff0c\u4f7f\u5f97 \\(a^2-b^2\\) \u548c \\(a^2+b^2\\) \u90fd\u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff1f</p> <p>\u7b54\uff1a\u4f3c\u4e4e\u65e0\u89e3\uff0c\u5f85\u8bc1\u660e TODO</p> <p>\u5206\u6790\uff1a\u53bb\u6389\u4efb\u4f55\u4e00\u4e2a<code>\u662f\u5b8c\u5168\u5e73\u65b9\u6570</code>\u7684\u6761\u4ef6\u90fd\u6709\u89e3\uff1a</p> <ul> <li>\u53bb\u6389 \\(a^2-b^2\\) \u6216 \\(a^2+b^2\\)\uff1a\u52fe\u80a1\u6570</li> <li>\u53bb\u6389 \\(a^2\\)\uff1a\\(5-4=1, 5+4=9\\)</li> <li>\u53bb\u6389 \\(b^2\\)\uff1a\\(25-24=1, 25+24=49\\)</li> </ul> <p>\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5f62\u5982 \\(144\\dots 444\\) \u7684\u5b8c\u5168\u5e73\u65b9\u6570\uff1f</p> <p>\u7b54\uff1a\u9664 \\(1\\) \u548c \\(144\\) \u5916\u4e0d\u5b58\u5728\uff0c\u56e0\u4e3a\u4e0d\u5b58\u5728\u5b8c\u5168\u5e73\u65b9\u6570 \\(a^2 \\equiv 4444 \\pmod{10000}\\)</p> <p>\u5206\u6790\uff1a\u9010\u4f4d\u8003\u8651\uff0c\\(a^2 \\equiv 4 \\pmod{10}\\) \u7684\u89e3\u6709 \\(2\\) \u548c \\(8\\)</p> <p>\\(a^2 \\equiv 44 \\pmod{100}\\) \u7684\u89e3\u6709 \\(12,62,88,38\\)</p> <p>\u663e\u7136 \\(x\\) \u662f\u89e3\u5219 \\(-x\\) \u4e5f\u662f\u89e3\u3002\u5982\u679c \\(x\\) \u662f \\(\\bmod 10^k\\) \u7684\u89e3\uff0c\u90a3\u4e48\u5bf9\u5e94 \\(\\bmod 10^{k+1}\\) \u7684\u89e3\u4e3a \\(c\\cdot 10^k+x\\)\uff0c\u6709</p> \\[(c\\cdot 10^k+x)^2 \\bmod 10^{k+1} = 2\\cdot c\\cdot10^k(x\\bmod 10) + x^2\\] <p>\u56fe\u7075\u673a\u505c\u673a\u95ee\u9898\uff1f\uff08\u76f8\u5173\uff1a\u54e5\u5fb7\u5c14\u4e0d\u5b8c\u5907\u6027\u5b9a\u7406\uff0cRice\u5b9a\u7406\uff0c\uff09</p> <p>\u7b54\uff1a TODO</p> <p>\u63a8\u5e7f\u7ed3\u5408\u5f8b\u5230 n\u5143\u8fd0\u7b97\uff1f</p> <p>\u5206\u6790\uff1a\u5728\u4e00\u4e2a\u6570\u7ec4\u4e0a\u7684 n \u53c9\u6811</p>"},{"location":"fragment/ray_tracing_weekend/","title":"Typed Racket \u7b80\u5355\u5149\u7ebf\u8ffd\u8e2a","text":"<p>\u53c2\u8003 https://github.com/RayTracing/raytracing.github.io https://in1weekend.blogspot.com/ \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u5149\u7ebf\u8ffd\u8e2a\u6e32\u67d3\uff0c\u4f7f\u7528 typed/racket \u5b9e\u73b0\uff0c\u7eaf\u5c5e\u51fa\u4e8e\u4e2a\u4eba\u5174\u8da3\u3002</p> <p>\u6211\u66fe\u7ecf\u4e0a\u8fc7\u4e00\u95e8\u56fe\u5f62\u5b66\u8bfe\u7a0b\uff0c\u4f46\u662f\u6ca1\u6709\u597d\u597d\u73cd\u60dc\u3002</p>"},{"location":"fragment/ray_tracing_weekend/#ppm","title":"PPM","text":"<p>\u4f7f\u7528 PPM \u683c\u5f0f\u662f\u6700\u76f4\u89c2\u7684\u8f93\u51fa\u56fe\u50cf\u7684\u65b9\u5f0f\uff1a </p>"},{"location":"fragment/ray_tracing_weekend/#_1","title":"\u5f00\u59cb","text":"<pre><code>#lang typed/racket\n(require math/matrix)\n(define image-width 512)\n(define image-height 288)\n(: main (Output-Port -&gt; Any))\n(define (main f)\n(fprintf f \"P3\\n\")\n(fprintf f \"256 256\\n\")\n(fprintf f \"255\\n\")\n(for* ([i : Integer (in-range 256)]\n[j : Integer (in-range 256)])\n(fprintf f \"~a ~a ~a\\n\" i j 255)))\n(call-with-output-file \"res.ppm\" main #:exists 'replace)\n</code></pre>"},{"location":"meta/meta/","title":"Meta","text":""},{"location":"meta/meta/#random-blog","title":"Random Blog","text":"<p>\u53ea\u662f\u4e00\u4e2a\u968f\u610f\u7684\u535a\u5ba2\uff0c\u4f46\u6211\u5e0c\u671b\u672a\u6765\u80fd\u5199\u4e00\u70b9\u6709\u7528\u7684\u4e1c\u897f\uff0c\u5e76\u4e14\u53ea\u5199\u6709\u7528\u7684\u4e1c\u897f\u3002</p>"},{"location":"meta/meta/#tech","title":"Tech","text":"<ul> <li>\u8bed\u6cd5 Markdown</li> <li>\u6784\u5efa Mkdocs<ul> <li>\u548c Material for MkDocs.</li> </ul> </li> </ul>"},{"location":"meta/meta/#mkdocs","title":"Mkdocs","text":""},{"location":"meta/meta/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"meta/meta/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"meta/meta/#material-for-mkdocs","title":"Material for MkDocs","text":""},{"location":"meta/test/","title":"Test page","text":""},{"location":"meta/test/#test-page_1","title":"Test page","text":"<p>https://squidfunk.github.io/mkdocs-material/reference/</p>"},{"location":"meta/test/#test-for-formula","title":"Test for formula","text":"\\[ a = \\frac{1}{2} \\sum_{\\sigma}\\mathbb{I} \\] <p>The homomorphism \\(f\\) is injective if and only if its kernel is only the  singleton set \\(e_G\\), because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such  that \\(f(a)=f(b)\\).</p>"},{"location":"meta/test/#test-for-codes","title":"Test for codes","text":"<pre><code>def f(n):\nreturn n * f(n-1) if n &gt; 1 else 1\nprint(f(3))\n</code></pre> Racket code<pre><code>(define (f x)\n(if (x &gt; 1)\n(* x (f (- x 1)))\n1))\n</code></pre>"},{"location":"meta/test/#test-for-admonitions","title":"Test for Admonitions","text":"<p>Note</p> <p>123</p> <p>123</p> collapsible <p>here</p> Lorem ipsum <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Lorem ipsum</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>1</p>"},{"location":"meta/test/#test-for-links","title":"Test for links","text":"<p>home page</p> <p>Yaml</p>"}]}